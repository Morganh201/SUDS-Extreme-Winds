regress_anova_prune2000 = prune(regress_anova2000, cp = 0.012)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2000 = rpart(surface_wind ~ ., extreme_winds2000, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2000 = prune(regress_anova2000, cp = 0.02)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2000 = rpart(surface_wind ~ ., extreme_winds2000, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2000 = prune(regress_anova2000, cp = 0.018)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2000 = rpart(surface_wind ~ ., extreme_winds2000, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2000 = prune(regress_anova2000, cp = 0.015)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
extreme_winds2000 = clim_wind2000 %>% filter(surface_wind > 10.5)
extreme_winds2090 = clim_wind2090 %>% filter(surface_wind > 10.5)
extreme_winds2000$Month <- factor(month.abb[extreme_winds2000$Month], levels = month.abb)
extreme_winds2090$Month <- factor(month.abb[extreme_winds2090$Month], levels = month.abb)
month_colors <- c(
"Jan" = "#1F78B4",  # Deep winter blue
"Feb" = "#4DA6FF",  # Frosty blue
"Mar" = "#A6CEE3",  # Icy sky blue
"Apr" = "#B2DF8A",  # Early spring green
"May" = "#FFFF99",  # Pale yellow
"Jun" = "#FDBF6F",  # Warm golden orange
"Jul" = "#FB8072",  # Coral red
"Aug" = "#E31A1C",  # Fiery red
"Sep" = "#FF7F00",  # Harvest orange
"Oct" = "#FFB347",   # Light pumpkin orange
"Nov" = "#D8BFD8",   # Soft thistle purple
"Dec" = "#1F78B4"   # Back to winter blue
)
# Plot boxplots 2000
ggplot(extreme_winds2000, aes(x = factor(Month), y = surface_wind, fill = factor(Month))) + geom_boxplot() +
labs(title = "Extreme Wind Speeds above 10.5 m/s in Toronto (2000)",
x = "Month",
y = "Wind Speed (m/s)") +
scale_fill_manual(values = month_colors) +
theme_minimal()
# Plot boxplots 2090
ggplot(extreme_winds2090, aes(x = factor(Month), y = surface_wind, fill = factor(Month))) + geom_boxplot() +
labs(title = "Extreme Wind Speeds above 10.5 m/s in Toronto (2000)",
x = "Month",
y = "Wind Speed (m/s)") +
scale_fill_manual(values = month_colors) +
theme_minimal()
extreme_winds2000 = clim_wind2000 %>% filter(surface_wind > 10.5)
extreme_winds2000 = extreme_winds2000 %>% mutate(summer_index = case_when(Month %in% c(6, 7, 8) ~ 1,
TRUE ~ 0))
extreme_winds2000 = extreme_winds2000 %>% dplyr::select(-time, -Year, -Month, -day_of_year)
extreme_winds2090 = clim_wind2090 %>% filter(surface_wind > 10.5)
extreme_winds2090 = extreme_winds2090 %>% mutate(summer_index = case_when(Month %in% c(6, 7, 8) ~ 1,
TRUE ~ 0))
extreme_winds2090 = extreme_winds2090 %>% dplyr::select(-time, -Year, -Month, -day_of_year)
extreme_winds2000 = clim_wind2000 %>% filter(surface_wind > 10.5)
extreme_winds2090 = clim_wind2090 %>% filter(surface_wind > 10.5)
extreme_winds2000$Month <- factor(month.abb[extreme_winds2000$Month], levels = month.abb)
extreme_winds2090$Month <- factor(month.abb[extreme_winds2090$Month], levels = month.abb)
month_colors <- c(
"Jan" = "#1F78B4",  # Deep winter blue
"Feb" = "#4DA6FF",  # Frosty blue
"Mar" = "#A6CEE3",  # Icy sky blue
"Apr" = "#B2DF8A",  # Early spring green
"May" = "#FFFF99",  # Pale yellow
"Jun" = "#FDBF6F",  # Warm golden orange
"Jul" = "#FB8072",  # Coral red
"Aug" = "#E31A1C",  # Fiery red
"Sep" = "#FF7F00",  # Harvest orange
"Oct" = "#FFB347",   # Light pumpkin orange
"Nov" = "#D8BFD8",   # Soft thistle purple
"Dec" = "#1F78B4"   # Back to winter blue
)
# Plot boxplots 2000
ggplot(extreme_winds2000, aes(x = factor(Month), y = surface_wind, fill = factor(Month))) + geom_boxplot() +
labs(title = "Extreme Wind Speeds above 10.5 m/s in Toronto (2000)",
x = "Month",
y = "Wind Speed (m/s)") +
scale_fill_manual(values = month_colors) +
theme_minimal()
# Plot boxplots 2090
ggplot(extreme_winds2090, aes(x = factor(Month), y = surface_wind, fill = factor(Month))) + geom_boxplot() +
labs(title = "Extreme Wind Speeds above 10.5 m/s in Toronto (2090)",
x = "Month",
y = "Wind Speed (m/s)") +
scale_fill_manual(values = month_colors) +
theme_minimal()
extreme_winds2000 = clim_wind2000 %>% filter(surface_wind > 10.5)
extreme_winds2000 = extreme_winds2000 %>% mutate(summer_index = case_when(Month %in% c(6, 7, 8) ~ 1,
TRUE ~ 0))
extreme_winds2000 = extreme_winds2000 %>% dplyr::select(-time, -Year, -Month, -day_of_year)
extreme_winds2090 = clim_wind2090 %>% filter(surface_wind > 10.5)
extreme_winds2090 = extreme_winds2090 %>% mutate(summer_index = case_when(Month %in% c(6, 7, 8) ~ 1,
TRUE ~ 0))
extreme_winds2090 = extreme_winds2090 %>% dplyr::select(-time, -Year, -Month, -day_of_year)
regress_anova2000 = rpart(surface_wind ~ ., extreme_winds2000, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2000 = prune(regress_anova2000, cp = 0.015)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2000 = rpart(surface_wind ~ ., extreme_winds2000, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2000 = prune(regress_anova2000, cp = 0.015)
rpart.plot(regress_anova_prune2000, branch = 0.3, compress = TRUE, extra = 101)
regress_anova2090 = rpart(surface_wind ~ ., extreme_winds2090, method = "anova",
control = rpart.control(cp=0, minsplit=25, minbucket=15, maxcompete=0, maxsurrogate=0))
regress_anova_prune2090 = prune(regress_anova2090, cp = 0.0283)
rpart.plot(regress_anova_prune2090, branch = 0.3, compress = TRUE, extra = 101)
threshold = quantile(clim_wind2000$surface_wind, probs = 0.98)
clim_fit = fevd(surface_wind, clim_wind2000, threshold = threshold, type = "GP")
plot(clim_fit)
plot(clim_fit, "trace")
return.level(clim_fit, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit, type="return.level", method="proflik", return.period = 500, xrange = c(14, 23), verbose = TRUE)
clim_fit1 = fevd(surface_wind, clim_wind2000, threshold = 10.5, type = "GP")
plot(clim_fit1)
plot(clim_fit1, "trace")
return.level(clim_fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
return.level(fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit1, type="return.level", method="proflik", return.period = 500, xrange = c(15, 23), verbose = TRUE)
threshrange.plot(clim_wind2000$surface_wind, r = c(3, 12), nint = 25)
mrlplot(clim_wind2000$surface_wind, xlim=c(3, 12))
threshrange.plot(clim_wind2000$surface_wind, r = c(5, 12), nint = 25)
mrlplot(clim_wind2000$surface_wind, xlim=c(5, 12))
threshrange.plot(clim_wind2000$surface_wind, r = c(8, 11), nint = 25)
mrlplot(clim_wind2000$surface_wind, xlim=c(8, 11))
threshrange.plot(clim_wind2000$surface_wind, r = c(7.5, 11), nint = 25)
mrlplot(clim_wind2000$surface_wind, xlim=c(7.5, 11))
threshold = quantile(clim_wind2000$surface_wind, probs = 0.98)
clim_fit = fevd(surface_wind, clim_wind2000, threshold = 8, type = "GP")
plot(clim_fit)
plot(clim_fit, "trace")
return.level(clim_fit, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit, type="return.level", method="proflik", return.period = 500, xrange = c(14, 23), verbose = TRUE)
ci(clim_fit, type="return.level", method="proflik", return.period = 500, xrange = c(17, 21), verbose = TRUE)
threshold = quantile(clim_wind2000$surface_wind, probs = 0.98)
clim_fit = fevd(surface_wind, clim_wind2000, threshold = 8, type = "GP")
plot(clim_fit)
plot(clim_fit, "trace")
return.level(clim_fit, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit, type="return.level", method="proflik", return.period = 500, xrange = c(17, 21), verbose = TRUE)
threshold = quantile(clim_wind2000$surface_wind, probs = 0.98)
clim_fit = fevd(surface_wind, clim_wind2000, threshold = 8, type = "GP")
plot(clim_fit)
plot(clim_fit, "trace")
return.level(clim_fit, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit, type="return.level", method="proflik", return.period = 500, xrange = c(18, 21), verbose = TRUE)
clim_fit1 = fevd(surface_wind, clim_wind2000, threshold = threshold, type = "GP")
plot(clim_fit1)
plot(clim_fit1, "trace")
return.level(clim_fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
return.level(fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit1, type="return.level", method="proflik", return.period = 500, xrange = c(15, 23), verbose = TRUE)
clim_fit1 = fevd(surface_wind, clim_wind2000, threshold = threshold, type = "GP")
plot(clim_fit1)
plot(clim_fit1, "trace")
return.level(clim_fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit1, type="return.level", method="proflik", return.period = 500, xrange = c(18, 24), verbose = TRUE)
clim_fit1 = fevd(surface_wind, clim_wind2000, threshold = threshold, type = "GP")
plot(clim_fit1)
plot(clim_fit1, "trace")
return.level(clim_fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit1, type="return.level", method="proflik", return.period = 500, xrange = c(18, 27), verbose = TRUE)
clim_fit1 = fevd(surface_wind, clim_wind2000, threshold = threshold, type = "GP")
plot(clim_fit1)
plot(clim_fit1, "trace")
return.level(clim_fit1, return.period = c(2, 20, 50, 100, 500), do.ci=TRUE)
ci(clim_fit1, type="return.level", method="proflik", return.period = 500, xrange = c(18, 28), verbose = TRUE)
yearly_max_climatology_hist = clim_wind2000 %>% group_by(day_of_year) %>%
summarise(max_wind_speed = max(surface_wind))
clim_wind2090 = clim_wind2090 %>% mutate(day_of_year = yday(time))
yearly_max_climatology_future = clim_wind2090 %>% group_by(day_of_year) %>%
summarise(max_wind_speed = max(surface_wind))
temp <- data.frame(
time = c(1:366),
hist = yearly_max_climatology_hist$max_wind_speed,
future = yearly_max_climatology_future$max_wind_speed
)
temp_long = data.frame(
time = rep(temp$time, 2),
y = c(temp$hist, temp$future),
group = rep(c("Historical (2000s)", "Future (2090s)"), each = 366)
)
ggplot(temp_long, aes(x = time, y = y, color = group)) +
geom_line() +
labs(title = "Yearly Maximum Climatology of Wind Speeds in Toronto (Historical vs Future)",
x = "Day of Year",
y = "Maximum Wind Speed (m/s)",
color = "Time Period") +
theme_minimal() +
theme(
legend.position = c(0.85, 0.15),  # x and y coordinates inside plot
legend.background = element_rect(fill = "white", color = "black")  # optional styling
) +
# Add vertical lines for different seasons
geom_vline(xintercept = c(60, 151, 244, 335),  # MAM, JJA, SON, DJF
linetype = "dashed", color = "red") +
# Add labels (optional)
annotate("text", x = 60, y = max(yearly_max_climatology_hist$max_wind_speed) - 0.6, label = "Spring", angle = 90, vjust = -0.5) +
annotate("text", x = 152, y = max(yearly_max_climatology_hist$max_wind_speed) - 0.6, label = "Summer", angle = 90, vjust = -0.5) +
annotate("text", x = 244, y = max(yearly_max_climatology_hist$max_wind_speed) - 0.6, label = "Autumn", angle = 90, vjust = -0.5) +
annotate("text", x = 335, y = max(yearly_max_climatology_hist$max_wind_speed) - 0.6, label = "Winter", angle = 90, vjust = -0.5)
temp = clim_wind2000 %>% mutate(period = "Historical") %>% filter(surface_wind > 10.5)
temp1 = clim_wind2090 %>% mutate(period = "Future") %>% filter(surface_wind > 10.5)
combined = rbind(temp, temp1)
ggplot(combined, aes(x = surface_wind, fill = period)) +
geom_density(alpha=0.4) +
labs(title = "Density Plots of Wind Speeds Historical vs. Future", fill = "Period",
x = "Wind Speed (m/s)", y = "Probability") +
theme_minimal() +
theme(
legend.position = c(0.85, 0.5),  # x and y coordinates inside plot
legend.background = element_rect(fill = "white", color = "black")  # optional styling
)
wilcox.test(temp$surface_wind, temp1$surface_wind,
alternative = "two.sided",
paired = FALSE,
exact = TRUE)
clim_wind2000 %>% mutate(cluster1 = case_when(low.level.wind > 18 & atmos_stability1 >= 0.0014 ~ 1,
TRUE ~ 0),
cluster2 = case_when(low.level.wind > 18 & atmos_stability1 < 0.0014 ~ 1,
TRUE ~ 0),
cluster3 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream >=33 ~ 1,
TRUE ~ 0),
cluster4 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream < 33 & atmos_stability1 < 0.0046,
TRUE ~ 0),
cluster5 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0046 & jet_stream < 33,
TRUE ~ 0),
cluster6 = case_when(low.level.wind >= 23 & atmos_stability1 < 0.0019))
clim_wind2000 %>% mutate(cluster1 = case_when(low.level.wind > 18 & atmos_stability1 >= 0.0014 ~ 1,
TRUE ~ 0),
cluster2 = case_when(low.level.wind > 18 & atmos_stability1 < 0.0014 ~ 1,
TRUE ~ 0),
cluster3 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream >=33 ~ 1,
TRUE ~ 0),
cluster4 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream < 33 & atmos_stability1 < 0.0046 ~ 1,
TRUE ~ 0),
cluster5 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0046 & jet_stream < 33 ~ 1,
TRUE ~ 0),
cluster6 = case_when(low.level.wind >= 23 & atmos_stability1 < 0.0019 ~ 1,
TRUE ~ 0))
clim_wind2000
clim_wind2000 = clim_wind2000 %>% mutate(cluster1 = case_when(low.level.wind > 18 & atmos_stability1 >= 0.0014 ~ 1,
TRUE ~ 0),
cluster2 = case_when(low.level.wind > 18 & atmos_stability1 < 0.0014 ~ 1,
TRUE ~ 0),
cluster3 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream >=33 ~ 1,
TRUE ~ 0),
cluster4 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream < 33 & atmos_stability1 < 0.0046 ~ 1,
TRUE ~ 0),
cluster5 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0046 & jet_stream < 33 ~ 1,
TRUE ~ 0),
cluster6 = case_when(low.level.wind >= 23 & atmos_stability1 < 0.0019 ~ 1,
TRUE ~ 0))
sum(clim_wind2000$cluster1) + sum(clim_wind2000$cluster2) + sum(clim_wind2000$cluster3) + sum(clim_wind2000$cluster4) + sum(clim_wind2000$cluster5) + sum(clim_wind2000$cluster6)
sum(clim_wind2000$cluster1) + sum(clim_wind2000$cluster2) + sum(clim_wind2000$cluster3) + sum(clim_wind2000$cluster4) + sum(clim_wind2000$cluster5) + sum(clim_wind2000$cluster6)
length(clim_wind2000[, 1]) - (sum(clim_wind2000$cluster1) + sum(clim_wind2000$cluster2) + sum(clim_wind2000$cluster3) + sum(clim_wind2000$cluster4) + sum(clim_wind2000$cluster5) + sum(clim_wind2000$cluster6))
clim_wind2000 = clim_wind2000 %>% mutate(cluster1 = case_when(low.level.wind >= 18 & low.level.wind < 23 & atmos_stability1 >= 0.0014 ~ 1,
TRUE ~ 0),
cluster2 = case_when(low.level.wind > 18 & atmos_stability1 < 0.0014 ~ 1,
TRUE ~ 0),
cluster3 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream >=33 ~ 1,
TRUE ~ 0),
cluster4 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream < 33 & atmos_stability1 < 0.0046 ~ 1,
TRUE ~ 0),
cluster5 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0046 & jet_stream < 33 ~ 1,
TRUE ~ 0),
cluster6 = case_when(low.level.wind >= 23 & atmos_stability1 < 0.0019 ~ 1,
TRUE ~ 0))
clim_wind2000 = clim_wind2000 %>% mutate(cluster1 = case_when(low.level.wind >= 18 & low.level.wind < 23 & atmos_stability1 >= 0.0014 ~ 1,
TRUE ~ 0),
cluster2 = case_when(low.level.wind >= 18 & low.level.wind < 23 & atmos_stability1 < 0.0014 ~ 1,
TRUE ~ 0),
cluster3 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream >=33 ~ 1,
TRUE ~ 0),
cluster4 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0019 & jet_stream < 33 & atmos_stability1 < 0.0046 ~ 1,
TRUE ~ 0),
cluster5 = case_when(low.level.wind >= 23 & atmos_stability1 >= 0.0046 & jet_stream < 33 ~ 1,
TRUE ~ 0),
cluster6 = case_when(low.level.wind >= 23 & atmos_stability1 < 0.0019 ~ 1,
TRUE ~ 0))
cluster0 = clim_wind2000 %>% filter(low.level_wind < 18)
cluster0 = clim_wind2000 %>% filter(low.level.wind < 18)
cluster1 = clim_wind2000 %>% filter(cluster1 == 1)
cluster2 = clim_wind2000 %>% filter(cluster2 == 1)
cluster3 = clim_wind2000 %>% filter(cluster3 == 1)
cluster4 = clim_wind2000 %>% filter(cluster4 == 1)
cluster5 = clim_wind2000 %>% filter(cluster5 == 1)
cluster6 = clim_wind2000 %>% filter(cluster6 == 1)
prob = 0.95
t0 = quantile(cluster0$surface_wind, prob = prob)
t1 = quantile(cluster1$surface_wind, prob = prob)
t2 = quantile(cluster2$surface_wind, prob = prob)
t3 = quantile(cluster3$surface_wind, prob = prob)
t4 = quantile(cluster4$surface_wind, prob = prob)
t5 = quantile(cluster5$surface_wind, prob = prob)
t6 = quantile(cluster6$surface_wind, prob = prob)
x = c(1, 2, 3, 4, 5, 6, 7)
threshold = c(t0, t1, t2, t3, t4, t5, t6)
temp = data.frame(x, threshold)
ggplot(temp, aes(x = x, y = threshold)) +
geom_point(color = "darkgreen", size = 3) + geom_line() +
labs(title = "Threshold Selection for each Cluster", x = "Cluster Index",
y = "Threshold (95th Percentile Winds)") +
scale_x_continuous(breaks = 1:7) +
theme_minimal()
fit9 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit10 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit11 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
scale.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, use.phi = TRUE, type="PP")
fit12 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
shape.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
lr.test(fit9, fit10)
lr.test(fit10, fit11)
lr.test(fit10, fit12)
plot(fit10)
plot(fit11)
plot(fit12)
v = make.qcov(fit10, vals = list(threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
mu1 = c(0, 1, 0, 0, 0, 0, 0),
mu2 = c(0, 0, 1, 0, 0, 0, 0),
mu3 = c(0, 0, 0, 1, 0, 0, 0),
mu4 = c(0, 0, 0, 0, 1, 0, 0),
mu5 = c(0, 0, 0, 0, 0, 1, 0),
mu6 = c(0, 0, 0, 0, 0, 0, 1)))
return.level(fit10, return.period = c(2, 20, 50, 75, 100), qcov=v)
cluster0 = clim_wind2000 %>% filter(low.level.wind < 18)
cluster1 = clim_wind2000 %>% filter(cluster1 == 1)
cluster2 = clim_wind2000 %>% filter(cluster2 == 1)
cluster3 = clim_wind2000 %>% filter(cluster3 == 1)
cluster4 = clim_wind2000 %>% filter(cluster4 == 1)
cluster5 = clim_wind2000 %>% filter(cluster5 == 1)
cluster6 = clim_wind2000 %>% filter(cluster6 == 1)
prob = 0.95
t0 = quantile(cluster0$surface_wind, prob = prob)
t1 = quantile(cluster1$surface_wind, prob = prob)
t2 = quantile(cluster2$surface_wind, prob = prob)
t3 = quantile(cluster3$surface_wind, prob = prob)
t4 = quantile(cluster4$surface_wind, prob = prob)
t5 = quantile(cluster5$surface_wind, prob = prob)
#t6 = quantile(cluster6$surface_wind, prob = prob)
t6 = 12
x = c(1, 2, 3, 4, 5, 6, 7)
threshold = c(t0, t1, t2, t3, t4, t5, t6)
temp = data.frame(x, threshold)
ggplot(temp, aes(x = x, y = threshold)) +
geom_point(color = "darkgreen", size = 3) + geom_line() +
labs(title = "Threshold Selection for each Cluster", x = "Cluster Index",
y = "Threshold (95th Percentile Winds)") +
scale_x_continuous(breaks = 1:7) +
theme_minimal()
fit9 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit10 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit11 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
scale.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, use.phi = TRUE, type="PP")
fit12 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
shape.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
lr.test(fit9, fit10)
lr.test(fit10, fit11)
lr.test(fit10, fit12)
plot(fit10)
plot(fit11)
plot(fit12)
fit9 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit10 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit11 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
scale.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, use.phi = TRUE, type="PP")
fit12 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
scale.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, use.phi = TRUE,
shape.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
lr.test(fit9, fit10)
lr.test(fit10, fit11)
lr.test(fit10, fit12)
plot(fit10)
plot(fit11)
plot(fit12)
v = make.qcov(fit11, vals = list(threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
mu1 = c(0, 1, 0, 0, 0, 0, 0),
mu2 = c(0, 0, 1, 0, 0, 0, 0),
mu3 = c(0, 0, 0, 1, 0, 0, 0),
mu4 = c(0, 0, 0, 0, 1, 0, 0),
mu5 = c(0, 0, 0, 0, 0, 1, 0),
mu6 = c(0, 0, 0, 0, 0, 0, 1),
phi1 = c(0, 1, 0, 0, 0, 0, 0),
phi2 = c(0, 0, 1, 0, 0, 0, 0),
phi3 = c(0, 0, 0, 1, 0, 0, 0),
phi4 = c(0, 0, 0, 0, 1, 0, 0),
phi5 = c(0, 0, 0, 0, 0, 1, 0),
phi6 = c(0, 0, 0, 0, 0, 0, 1),))
return.level(fit11, return.period = c(2, 20, 50, 75, 100), qcov=v)
v = make.qcov(fit11, vals = list(threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
mu1 = c(0, 1, 0, 0, 0, 0, 0),
mu2 = c(0, 0, 1, 0, 0, 0, 0),
mu3 = c(0, 0, 0, 1, 0, 0, 0),
mu4 = c(0, 0, 0, 0, 1, 0, 0),
mu5 = c(0, 0, 0, 0, 0, 1, 0),
mu6 = c(0, 0, 0, 0, 0, 0, 1),
phi1 = c(0, 1, 0, 0, 0, 0, 0),
phi2 = c(0, 0, 1, 0, 0, 0, 0),
phi3 = c(0, 0, 0, 1, 0, 0, 0),
phi4 = c(0, 0, 0, 0, 1, 0, 0),
phi5 = c(0, 0, 0, 0, 0, 1, 0),
phi6 = c(0, 0, 0, 0, 0, 0, 1)))
return.level(fit11, return.period = c(2, 20, 50, 75, 100), qcov=v)
cluster0 = clim_wind2000 %>% filter(low.level.wind < 18)
cluster1 = clim_wind2000 %>% filter(cluster1 == 1)
cluster2 = clim_wind2000 %>% filter(cluster2 == 1)
cluster3 = clim_wind2000 %>% filter(cluster3 == 1)
cluster4 = clim_wind2000 %>% filter(cluster4 == 1)
cluster5 = clim_wind2000 %>% filter(cluster5 == 1)
cluster6 = clim_wind2000 %>% filter(cluster6 == 1)
prob = 0.95
t0 = quantile(cluster0$surface_wind, prob = prob)
t1 = quantile(cluster1$surface_wind, prob = prob)
t2 = quantile(cluster2$surface_wind, prob = prob)
t3 = quantile(cluster3$surface_wind, prob = prob)
t4 = quantile(cluster4$surface_wind, prob = prob)
t5 = quantile(cluster5$surface_wind, prob = prob)
t6 = quantile(cluster6$surface_wind, prob = prob)
x = c(1, 2, 3, 4, 5, 6, 7)
threshold = c(t0, t1, t2, t3, t4, t5, t6)
temp = data.frame(x, threshold)
ggplot(temp, aes(x = x, y = threshold)) +
geom_point(color = "darkgreen", size = 3) + geom_line() +
labs(title = "Threshold Selection for each Cluster", x = "Cluster Index",
y = "Threshold (95th Percentile Winds)") +
scale_x_continuous(breaks = 1:7) +
theme_minimal()
fit9 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit10 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
fit11 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
scale.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, use.phi = TRUE, type="PP")
fit12 = fevd(surface_wind, clim_wind2000, threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
threshold.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
location.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6,
shape.fun = ~ cluster1 + cluster2 + cluster3 + cluster4 + cluster5 + cluster6, type="PP")
lr.test(fit9, fit10)
lr.test(fit10, fit11)
lr.test(fit10, fit12)
plot(fit10)
plot(fit11)
plot(fit12)
v = make.qcov(fit10, vals = list(threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
mu1 = c(0, 1, 0, 0, 0, 0, 0),
mu2 = c(0, 0, 1, 0, 0, 0, 0),
mu3 = c(0, 0, 0, 1, 0, 0, 0),
mu4 = c(0, 0, 0, 0, 1, 0, 0),
mu5 = c(0, 0, 0, 0, 0, 1, 0),
mu6 = c(0, 0, 0, 0, 0, 0, 1)))
return.level(fit10, return.period = c(2, 20, 50, 75, 100), qcov=v)
plot(fit9)
lr.test(fit9, fit10)
lr.test(fit10, fit11)
lr.test(fit10, fit12)
plot(fit9)
plot(fit10)
plot(fit11)
plot(fit12)
v = make.qcov(fit10, vals = list(threshold = c(t0, t1-t0, t2-t0, t3-t0, t4-t0, t5-t0, t6-t0),
mu1 = c(0, 1, 0, 0, 0, 0, 0),
mu2 = c(0, 0, 1, 0, 0, 0, 0),
mu3 = c(0, 0, 0, 1, 0, 0, 0),
mu4 = c(0, 0, 0, 0, 1, 0, 0),
mu5 = c(0, 0, 0, 0, 0, 1, 0),
mu6 = c(0, 0, 0, 0, 0, 0, 1)))
return.level(fit10, return.period = c(2, 20, 50, 75, 100), qcov=v)
threshold = quantile(clim_wind2000$surface_wind, probs = 0.98)
threshold2 = quantile(clim_wind2090$surface_wind, probs = 0.98)
